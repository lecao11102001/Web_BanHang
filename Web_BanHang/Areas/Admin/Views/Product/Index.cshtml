@using PagedList;
@using PagedList.Mvc
@model PagedList.IPagedList<Web_BanHang.Context.Product>

@{
    ViewBag.Title = "Quản lý sản phẩm";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<style>
    .pagination {
        display: inline-block;
        padding-left: 0;
        margin: 20px 0;
        border-radius: 4px;
    }
        .pagination > li{
            display: inline;
        }
            .pagination > li > a, 
            .pagination > li > span{
                position: relative;
                float: left;
                padding: 6px 12px;
                margin-left: -1px;
                line-height: 1.428571429;
                text-decoration: none;
                background-color: #ffffff;
                border: 1px solid #dddddd;
            }

            .pagination > li:first-child > a, 
            .pagination > li:first-child > span{
                margin-left: 0;
                border-bottom-left-radius: 4px;
                border-top-left-radius: 4px;
            }

            .pagination > li:last-child > a, 
            .pagination > li:last-child > span{
                border-top-right-radius: 4px;
                border-bottom-right-radius: 4px;
            }

            .pagination > li > a:hover, 
            .pagination > li > span:hover,
            .pagination > li > a:focus,
            .pagination > li > span:focus{
                background-color: #eeeeee;
            }
        .pagination > .active > a,
        .pagination > .active > span,
        .pagination > .active > a:hover,
        .pagination > .active > span:hover,
        .pagination > .active > a:focus,
        .pagination > .active > span:focus{
            z-index: 2;
            color: #ffffff;
            cursor: default;
            background-color: #428bca;
            border-color: #428bca;
        }

        .pagination > .disabled > span,
        .pagination > .disabled > a,
        .pagination > .disabled > a:hover,
        .pagination > .disabled > a:focus{
            color: #999999;
            cursor: not-allowed;
            background-color: #ffffff;
            border-color: #dddddd;
        }

    .pagination-lg > li > a,
    .pagination-lg > li > span{
        padding: 10px 16px;
        font-size: 18px;
    }

    .pagination-lg > li:first-child > a,
    .pagination-lg > li:first-child > span{
        border-bottom-left-radius: 6px;
        border-top-left-radius: 6px;
    }

    .pagination-lg > li:last-child > a,
    .pagination-lg > li:last-child > span{
        border-top-right-radius: 6px;
        border-bottom-right-radius: 6px;
    }

    .pagination-sm > li > a,
    .pagination-sm > li > span{
        padding: 5px 10px;
        font-size: 12px;
    }

    .pagination-sm > li:first-child > a,
    .pagination-sm > li:first-child > span{
        border-bottom-left-radius: 3px;
        border-top-left-radius: 3px;
    }

    .pagination-sm > li:last-child > a,
    .pagination-sm > li:last-child > span{
        border-top-right-radius: 3px;
        border-bottom-right-radius: 3px;
    }

    .pager{
        padding-left: 0;
        margin: 20px 0;
        text-align: center;
        list-style: none;
    }
        .page:before,
        .page:after{
            display: table;
            content: " ";
        }

        .page::after{
            clear: both;
        }

        .page:before,
        .page::after{
            display: table;
            content: " ";
        }

        .page li{
            display: inline;
        }

            .page li > a,
            .page li > span{
                display: inline-block;
                padding: 5px 14px;
                background-color: #ffffff;
                border: 1px solid #dddddd;
                border-radius: 15px;
            }

                .page li > a:hover,
                .page li > a:focus{
                    text-decoration: none;
                    background-color: #eeeeee;
                }
        .page .next > a,
        .page .next > span{
            float: right;
        }

    .page .previous > a,
    .page .previous > span{
        float: left;
    }

    .page .disabled > a,
    .page .disabled > a:hover,
    .page .disabled > a:focus,
    .page .disabled > span{
        color: #999999;
        cursor: not-allowed;
        background-color: #ffffff;
    }
</style>

<div class="content-wrapper">

    <h2>Quản lý sản phẩm</h2>

    <p>
        @Html.ActionLink("Tạo mới", "Create")
    </p>

    @using (Html.BeginForm("Index", "Product", FormMethod.Get))
     {
        <p>
            Tìm tên sản phẩm: @Html.TextBox("SearchString", ViewBag.CurrentFilter as String)
            <input type="submit", value="Tìm kiếm"/>
        </p>
     }

    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Avatar)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().CategoryId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().ShortDes)
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.FullDescription)
                </th>*@
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().PriceDiscount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().TypeId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Slug)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().BrandId)
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.Deleted)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ShowOnHomePage)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DisplayOrder)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreatedOnUtc)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.UpdatedOnUtc)
                </th>*@
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Avatar)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CategoryId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ShortDes)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.FullDescription)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PriceDiscount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TypeId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Slug)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BrandId)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.Deleted)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ShowOnHomePage)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DisplayOrder)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedOnUtc)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UpdatedOnUtc)
                    </td>*@
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }

    </table>

    Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @*@Html.PagedListPager(Model, page => Url.Action("Index", new {page, currentFilter = ViewBag.CurrentFilter}))*@
</div>
    
